# Generated by Django 5.0.7 on 2024-10-07 17:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('size', models.PositiveIntegerField()),
                ('progress', models.CharField(max_length=50)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Malem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('pslist_nproc', models.IntegerField()),
                ('pslist_nppid', models.IntegerField()),
                ('pslist_avg_threads', models.FloatField()),
                ('pslist_nprocs64bit', models.IntegerField()),
                ('pslist_avg_handlers', models.FloatField()),
                ('dlllist_ndlls', models.IntegerField()),
                ('dlllist_avg_dlls_per_proc', models.FloatField()),
                ('handles_nhandles', models.IntegerField()),
                ('handles_avg_handles_per_proc', models.FloatField()),
                ('handles_nfile', models.IntegerField()),
                ('handles_nevent', models.IntegerField()),
                ('handles_ndesktop', models.IntegerField()),
                ('handles_nkey', models.IntegerField()),
                ('handles_nthread', models.IntegerField()),
                ('handles_ndirectory', models.IntegerField()),
                ('handles_nsemaphore', models.IntegerField()),
                ('handles_ntimer', models.IntegerField()),
                ('handles_nsection', models.IntegerField()),
                ('handles_nmutant', models.IntegerField()),
                ('ldrmodules_not_in_load', models.IntegerField()),
                ('ldrmodules_not_in_init', models.IntegerField()),
                ('ldrmodules_not_in_mem', models.IntegerField()),
                ('ldrmodules_not_in_load_avg', models.FloatField()),
                ('ldrmodules_not_in_init_avg', models.FloatField()),
                ('ldrmodules_not_in_mem_avg', models.FloatField()),
                ('malfind_ninjections', models.IntegerField()),
                ('malfind_commitCharge', models.FloatField()),
                ('malfind_protection', models.FloatField()),
                ('malfind_uniqueInjections', models.IntegerField()),
                ('psxview_not_in_pslist', models.IntegerField()),
                ('psxview_not_in_eprocess_pool', models.IntegerField()),
                ('psxview_not_in_ethread_pool', models.IntegerField()),
                ('psxview_not_in_pspcid_list', models.IntegerField()),
                ('psxview_not_in_csrss_handles', models.IntegerField()),
                ('psxview_not_in_session', models.IntegerField()),
                ('psxview_not_in_deskthrd', models.IntegerField()),
                ('psxview_not_in_pslist_false_avg', models.FloatField()),
                ('psxview_not_in_eprocess_pool_false_avg', models.FloatField()),
                ('psxview_not_in_ethread_pool_false_avg', models.FloatField()),
                ('psxview_not_in_pspcid_list_false_avg', models.FloatField()),
                ('psxview_not_in_csrss_handles_false_avg', models.FloatField()),
                ('psxview_not_in_session_false_avg', models.FloatField()),
                ('psxview_not_in_deskthrd_false_avg', models.FloatField()),
                ('modules_nmodules', models.IntegerField()),
                ('svcscan_nservices', models.IntegerField()),
                ('svcscan_kernel_drivers', models.IntegerField()),
                ('svcscan_fs_drivers', models.IntegerField()),
                ('svcscan_process_services', models.IntegerField()),
                ('svcscan_shared_process_services', models.IntegerField()),
                ('svcscan_interactive_process_services', models.IntegerField()),
                ('svcscan_nactive', models.IntegerField()),
                ('callbacks_ncallbacks', models.IntegerField()),
                ('callbacks_nanonymous', models.IntegerField()),
                ('callbacks_ngeneric', models.IntegerField()),
                ('class_name', models.CharField(max_length=50)),
                ('handles_nport', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('upload', models.FileField(upload_to='uploads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.customuser')),
            ],
        ),
    ]
